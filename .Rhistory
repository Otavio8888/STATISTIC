############################################################################
#   PREPARACAO, ORGANIZACAO E ESTRUTURACAO DOS DADOS (PRE-PROCESSAMENTO)   #
############################################################################


# BAIXAR PACOTES


install.packages("dplyr") # Manipulacao de Dados
# OU
# BAIXAR PACOTES, CASO ELES AINDA NAO ESTEJAM BAIXADOS
if(!require(dplyr)) install.packages("dplyr")
# CARREGAR PACOTES
library(dplyr)
# BUSCAR DIRETORIO (PASTA COM OS ARQUIVOS)
setwd("D:/Users/Otavio/Documents/cursos/estatistica_R")
#ABRIR ARQUIVO
enem2019 <- read.csv('enem_sp_2019.csv')
View(enem2019)
# EXCLUIR UMA COLUNA
enem2019$NU_ANO <- NULL
# EXCLUIR VARIAS COLUNAS
excluir <- c("TP_ESTADO_CIVIL", "SG_UF_RESIDENCIA")
View (excluir)
enem2019 <- enem2019[  , !(names(enem2019) %in% excluir)]
View(names(enem2019))
# %in% verifica a intersec??o em duas listas ou vetores.
#RENOMEAR UMA COLUNA
enem2019 <- rename(enem2019, NOTA_COMP1 = NU_NOTA_COMP1)
#RENOMEAR V?RIAS COLUNAS
enem2019 <- rename(enem2019, NOTA_COMP2 = NU_NOTA_COMP2, NOTA_COMP3 = NU_NOTA_COMP3,
NOTA_COMP4 = NU_NOTA_COMP4,NOTA_COMP5 = NU_NOTA_COMP5,
NOTA_REDACAO = NU_NOTA_REDACAO, NOTA_CN = NU_NOTA_CN,
NOTA_CH = NU_NOTA_CH, NOTA_LC = NU_NOTA_LC, NOTA_MT = NU_NOTA_MT)
#VERIFICACAO DA TIPAGEM DOS ATRIBUTOS (Variaveis)
# EXISTEM 6 TIPOS BASICOS:
# character (caracteres)
# integer (n?meros inteiros)
# numeric (n?meros reais)
# logical (falso ou verdadeiro)
# complex (n?meros complexos)
# factor (fator: ordenar strings)
str(enem2019)
# OU
glimpse(enem2019)
#Transformando a variavel Codigo escola em fator
enem2019$CO_ESCOLA <- as.factor(enem2019$CO_ESCOLA)
# Verificando valores missing (Ausentes)
# NA = valores ausentes
# NAN = not a number(valor indefinido)
sapply(enem2019, function(x) sum(is.na(x)))
sapply(enem2019, function(x) sum(is.nan(x)))
#TREINEIROS
treineiros <- enem2019 %>% filter(IN_TREINEIRO==1)# 93991 treineiros
#RETIRAR TREINEIROS
vestibulandos <- enem2019 %>% filter(IN_TREINEIRO==0)
# EXCLUIR UMA COLUNA
vestibulandos$IN_TREINEIRO <- NULL
#Exportando o arquivo treineiros
write.table(treineiros, file ="treineiros.csv", sep = ",")
#CRIANDO COLUNA PARA CLASSIFICAR AS PRESEN?AS
vestibulandos["presenca"] <- vestibulandos$TP_PRESENCA_CN + vestibulandos$TP_PRESENCA_CH +
vestibulandos$TP_PRESENCA_LC + vestibulandos$TP_PRESENCA_MT
falta_2dias <- vestibulandos %>% filter(presenca==0) # 185177 n?o compareceram nos dois dias
falta_1dia <- vestibulandos %>% filter(presenca==2) # 33726 n?o compareceram em um dos dias
desclas <- vestibulandos %>% filter(presenca==6) # 341 desclassificados em um dos dias
desclas_2vezes <- vestibulandos %>% filter(presenca==8) # nenhum desclassificado nos dois dias
#SELECIONANDO APENAS OS QUE COMPARECERAM NOS DOIS DIAS.
vestibulandos_presentes <- vestibulandos %>% filter(presenca==4)
# BAIXAR PACOTES PARA TRATAR VALORES MISSING
if(!require(tidyverse)) install.packages("tidyverse")
library(tidyverse)
# Verificando valores missing
sapply(vestibulandos_presentes, function(x) sum(is.na(x)))




# EXCLUINDO VALORES MISSING


vestibulandos_presentes <- drop_na(vestibulandos_presentes, NOTA_MT)
sapply(vestibulandos_presentes, function(x) sum(is.na(x)))


# VERIFICANDO NOTAS ZEROS



nota_zero <- vestibulandos_presentes %>% filter(NOTA_REDACAO==0) #9181 notas zeros
nota_zero <- vestibulandos_presentes %>% filter(NOTA_COMP1==0) #9188 notas zeros
nota_zero <- vestibulandos_presentes %>% filter(NOTA_COMP2==0) #9181 notas zeros
nota_zero <- vestibulandos_presentes %>% filter(NOTA_COMP3==0) #9197 notas zeros
nota_zero <- vestibulandos_presentes %>% filter(NOTA_COMP4==0) #9194 notas zeros
nota_zero <- vestibulandos_presentes %>% filter(NOTA_COMP5==0) #73333 notas zeros
nota_zero <- vestibulandos_presentes %>% filter(NOTA_MT==0) #56 notas zeros
nota_zero <- vestibulandos_presentes %>% filter(NOTA_CH==0) #343 notas zeros
nota_zero <- vestibulandos_presentes %>% filter(NOTA_CN==0) #36 notas zeros
nota_zero <- vestibulandos_presentes %>% filter(NOTA_LC==0) #135 notas zeros
redacao_sem_prob <- vestibulandos_presentes %>% filter(TP_STATUS_REDACAO==1) # 490770 reda??es sem problemas
# EXCLUIR A COLUNA PRESEN?A
vestibulandos_presentes$presenca <- NULL
#EXPORTAR ARQUIVO TRATADO
write.table(vestibulandos_presentes, file ="enem2019_tratado.csv", sep = ",")



######################
###   AMOSTRAGEM   ###
######################


#BAIXAR PACOTES, CASO ELES AINDA N?O ESTEJAM BAIXADOS
if(!require(dplyr)) install.packages("dplyr")
if(!require(sampling)) install.packages("sampling")
if(!require(TeachingSampling)) install.packages("TeachingSampling")
#CARREGAR PACOTES
library(dplyr)
library(sampling)
library(TeachingSampling)
# BUSCAR DIRETORIO (PASTA COM OS ARQUIVOS)
setwd("D:/Users/Otavio/Documents/cursos/estatistica_R")
# ABRIR ARQUIVO
enem2019_tratado <- read.csv('enem2019_tratado.csv', sep = ",")
View(enem2019_tratado)
# AMOSTRAGEM ALEAT?RIA SIMPLES EM CAMPINAS
enem_campinas <- enem2019_tratado %>% filter(NO_MUNICIPIO_RESIDENCIA=="Campinas")
# CRIANDO AMOSTRAS ALEAT?RIAS
set.seed(1) # comando permite nao alterar a aleatoriedade qdo processar mais de uma vez.
amostra <- sample(c(0,1), 13199, replace = TRUE, prob=c(0.8,0.2))
summary(as.factor(amostra))
prop.table(table(amostra))
amostracampinas <- enem_campinas[amostra==1,  ]
dim(amostracampinas)
###  AMOSTRAGEM SISTEMATICA  ###
#Criando o vetor
set.seed(2)
amostra <- S.SY(13199, 100)
amostra
dim(amostra)
# AMOSTRAGEM EM CAMPINAS
enem_campinas <- enem2019_tratado %>% filter(NO_MUNICIPIO_RESIDENCIA=="Campinas")
#Relacionando com enem_campinas
amostracampinas2 <- enem_campinas[amostra,]
#### AMOSTRAGEM ESTRATIFICADA ######
# AMOSTRAGEM EM CAMPINAS
enem_campinas <- enem2019_tratado %>% filter(NO_MUNICIPIO_RESIDENCIA=="Campinas")
#AMOSTRAGEM ESTRATIFICADA EM CAMPINAS POR RA?A
summary(as.factor(enem_campinas$TP_COR_RACA))
prop.table(table(enem_campinas$TP_COR_RACA))



#ALTERANDO N?MERO PELA RACA


enem_campinas$TP_COR_RACA[enem_campinas$TP_COR_RACA==0] <- "N?o definido"
enem_campinas$TP_COR_RACA[enem_campinas$TP_COR_RACA==1] <- "Branca"
enem_campinas$TP_COR_RACA[enem_campinas$TP_COR_RACA==2] <- "Preta"
enem_campinas$TP_COR_RACA[enem_campinas$TP_COR_RACA==3] <- "Parda"
enem_campinas$TP_COR_RACA[enem_campinas$TP_COR_RACA==4] <- "Amarela"
enem_campinas$TP_COR_RACA[enem_campinas$TP_COR_RACA==5] <- "Ind?gena"
summary(as.factor(enem_campinas$TP_COR_RACA))
prop.table(table(enem_campinas$TP_COR_RACA))
#UTILIZANDO APROXIMADAMENTE 10% DE CADA COR/RA?A (ESTRATO)
#Cuidado com a ordem! Fazer a an?lise antes.
ordem_amostras <- strata(data=enem_campinas,
stratanames=c("TP_COR_RACA"),size=c(1, 2, 3, 4, 5, 6), method="srswor")
summary(as.factor(ordem_amostras$TP_COR_RACA))
summary(as.factor(enem_campinas$TP_COR_RACA))
amostracampinas3 <- strata(data=enem_campinas,
stratanames=c("TP_COR_RACA"),size=c(751, 365, 151, 21, 5, 28), method="srswor")
#srswor: amostra simples sem reposi??o
#srswr: com reposi??o
summary(as.factor(amostracampinas3$TP_COR_RACA))



#######################################
###   Distribuicao de frequencias   ###
#######################################



#BAIXAR PACOTES, CASO ELES AINDA N?O ESTEJAM BAIXADOS



if(!require(dplyr)) install.packages("dplyr")
if(!require(sampling)) install.packages("sampling")
if(!require(TeachingSampling)) install.packages("TeachingSampling")
#CARREGAR PACOTES
library(dplyr)
library(sampling)
library(TeachingSampling)
# BUSCAR DIRET?RIO (PASTA COM OS ARQUIVOS)
setwd("D:/Users/Otavio/Documents/cursos/estatistica_R")
getwd()
#ABRIR ARQUIVO
enem2019_tratado <- read.csv('enem2019_tratado.csv', sep = ",")
#SOROCABA
enem_sorocaba <- enem2019_tratado %>% filter(NO_MUNICIPIO_RESIDENCIA=="Sorocaba")


# Tabela de Frequ?ncias Absolutas


freq_abs <- table(enem_sorocaba$NU_IDADE)
View(freq_abs)
# Tabela de Frequ?ncias Relativas
freq_rel <- prop.table(freq_abs)
View(freq_rel)
# Porcentagem da frequ?ncia relativa
p_freq_rel <- 100 * prop.table(freq_rel)
View(p_freq_rel)
# Criar uma linha com o total
freq_abs <- c(freq_abs, sum(freq_abs))
View(freq_abs)
names(freq_abs)[54] <- "Total"
View(freq_abs)
# Juntando a frequ?ncia relativa e a frequencia percentual com suas respectivas somas.
freq_rel <- c(freq_rel, sum(freq_rel))
p_freq_rel <- c(p_freq_rel, sum(p_freq_rel))
# Tabela final com todos os valores
tabela_final <- cbind(freq_abs,
freq_rel = round(freq_rel, digits = 5),
p_freq_rel = round(p_freq_rel, digits = 2))
View(tabela_final)
#CONSTRUINDO CLASSES DE FREQU?NCIAS
intervalo_classes <- seq(10,75,5)
View(intervalo_classes)
tabela_classes <- table(cut(enem_sorocaba$NU_IDADE, breaks=intervalo_classes, right=FALSE))
View(tabela_classes)
# GRAFICOS DE FREQU?NCIA
# Histograma
hist(enem_sorocaba$NU_IDADE, col = "red")
# Poligono de frequ?ncia
plot(tabela_classes,type='o')
?plot
# GRAFICO DE OGIVA
# Frequencia Acumulada
freq_rel_classes <- prop.table(table(cut(enem_sorocaba$NU_IDADE,
breaks = c(intervalo_classes))))
View(freq_rel_classes)
freq_acum <- cumsum(tabela_classes)[seq_along(intervalo_classes)]
View(freq_acum)
# GRAFICO
plot(intervalo_classes, freq_acum, type='o')
###  AMOSTRAGEM POR CONGLOMERADO (AGRUPAMENTO)  ###
enem_campinas <- enem2019_tratado %>% filter(NO_MUNICIPIO_RESIDENCIA=="Campinas")
escolas_publicas <- enem_campinas %>% filter(TP_ESCOLA==2)
# 187 escolas p?blicas de Campinas
set.seed(3)
amostracampinas4 <- cluster(escolas_publicas, clustername = c("CO_ESCOLA"), size=19, method=c("srswor" ))
summary(as.factor(amostracampinas4$CO_ESCOLA))
# Testando os resultados
teste <- enem_campinas %>% filter(CO_ESCOLA==35903875)


##########################################################
####    DISTRIBUICAO CONT?NUA -TESTES DE NORMALIDADE   ###
##########################################################



#TESTES DE NORMALIDADE
# Existem 4 testes de normalidade principais (num?ricos) e dois testes gr?ficos:
# Shapiro-Wilk (limite de 5000 amostras)
# Anderson-Darling
# Kolmogorov_Smirnov
# Cramer-Von Mises
# Histograma
# QQplot
# N?VEL DE SIGNIFICANCIA DE 0,05 ou 5% (MAIS UTILIZADO):
# QUANDO p > 0,05 (distribui??o normal).
if(!require(dplyr)) install.packages("dplyr")
if(!require(nortest)) install.packages("nortest")
library(nortest)
library(dplyr)
# BUSCAR DIRETORIO (PASTA COM OS ARQUIVOS)
setwd("D:/Users/Otavio/Documents/cursos/estatistica_R")
#ABRIR ARQUIVO
enem2019_tratado <- read.csv('enem2019_tratado.csv', sep = ",")
#CI?NCIAS NATURAIS
#Histograma
hist(enem2019_tratado$NOTA_CN, probability=T, col="blue")
lines(density(enem2019_tratado$NOTA_CN) , col="red")
# QQPLOT (GRAFICO DE DISTRIBUICAO NORMAL)
qqnorm(enem2019_tratado$NOTA_CN)
qqline(enem2019_tratado$NOTA_CN)
# Shapiro-Wilk
shapiro.test(enem2019_tratado$NOTA_CN)
# Anderson-Darling
ad.test(enem2019_tratado$NOTA_CN)
# Kolmogorov_Smirnov
ks.test(enem2019_tratado$NOTA_CN, pnorm)
lillie.test(enem2019_tratado$NOTA_CN)
#Cramer-Von Mises
cvm.test(enem2019_tratado$NOTA_CN)
#AN?LISE NA CIDADE DE FRANCA
enem_franca <- enem2019_tratado %>% filter(NO_MUNICIPIO_RESIDENCIA =="Franca")
#CI?NCIAS NATURAIS
#Histograma
hist(enem_franca$NOTA_CN, probability=T, col="blue")
lines(density(enem_franca$NOTA_CN) , col="red")
# QQPLOT (GR?FICO DE DISTRIBUI??O NORMAL)
qqnorm(enem_franca$NOTA_CN)
qqline(enem_franca$NOTA_CN)
# Shapiro-Wilk
shapiro.test(enem_franca$NOTA_CN)
# Anderson-Darling
ad.test(enem_franca$NOTA_CN)
# Kolmogorov_Smirnov
lillie.test(enem_franca$NOTA_CN)
#Cramer-Von Mises
cvm.test(enem_franca$NOTA_CN)



#####################################################
####   DISTRIBUICAO DE PROBABILIDADES DISCRETAS   ###
#####################################################



#BAIXAR PACOTES, CASO ELES AINDA NAO ESTEJAM BAIXADOS
if(!require(dplyr)) install.packages("dplyr")
#CARREGAR PACOTES
library(dplyr)
# BUSCAR DIRET?RIO (PASTA COM OS ARQUIVOS)
setwd("D:/Users/Otavio/Documents/cursos/estatistica_R")
#ABRIR ARQUIVO
enem2019_tratado <- read.csv('enem2019_tratado.csv', sep = ",")
#CRIANDO FUN??O PROBABILIDADE
probab <- function(A, E) {
resultado = A / E
print(resultado, digits = 3)
}
#PROBABILIDADE DE RETIRAR UMA MULHER
mulheres_enem <- enem2019_tratado %>% filter(TP_SEXO=="F")
p <- probab(nrow(mulheres_enem), nrow(enem2019_tratado))
#DISTRIBUI??O BINOMIAL
#dbinom = valor pontual   e   pbinom = faixa de valores
#PROBABILIDADE DE RETIRAR EXATAMENTE 4 MULHERES NUM TOTAL DE 10 AMOSTRAS
dbinom(4,10,p)   # Primeiro parametro:valor ou limite que se esta acumulando
# Segundo: numero de tentativas
# Terceiro: probabilidade de um sucesso.
#PROBABILIDADE DE RETIRAR PELO MENOS UMA MULHER NUM TOTAL DE 10 AMOSTRAS
p0 = 1 - dbinom(0,10,p)
p0
#PROBABILIDADE DE RETIRAR MAIS DO QUE 1 MULHER NUM TOTAL DE 10 AMOSTRAS
p1 = 1 - (dbinom(0,10,p)+dbinom(1,10,p))
p1
#PROBABILIDADE DE RETIRAR MAIS DO QUE 3 MULHERES NUM TOTAL DE 10 AMOSTRAS
p2 = 1 - (dbinom(0,10,p)+dbinom(1,10,p)+dbinom(2,10,p)+dbinom(3,10,p))
p2
p3 = 1 - pbinom(3, 10, p)
p3
#PROBABILIDADE DE RETIRAR MAIS DO QUE 8 MULHERES NUM TOTAL DE 10 AMOSTRAS
p4 = dbinom(9,10,p)+dbinom(10,10,p)
p4
p5 = pbinom(10, 10, p) - pbinom(8, 10, p)
p5
#DISTRIBUI??O GEOMETRICA
#PROBABILIDADE DE RETIRAR 3 AMOSTRAS E NENHUMA SER MULHER
dgeom(3, p) #dgeom(x,p) x representa o n?mero de fracassos e p a probabilidade
#DISTRIBUICAO DE POISSON
# Num local de prova, 100 vestibulandos, normalmente, terminaram a prova em 2 horas (tempo m?nimo).
# Probabilidade de exatamente 90 vestibulandos terminarem a prova em 2h.
dpois(90,100) #dpois(x, m) x ? a quantidade de ocorr?ncias EM ESTUDO e m ? a taxa de ocorr?ncias.


########################################
###   MEDIDAS DE TENDENCIA CENTRAL   ###
########################################



#BAIXAR PACOTES, CASO ELES AINDA N?O ESTEJAM BAIXADOS
if(!require(dplyr)) install.packages("dplyr")
#CARREGAR PACOTES
library(dplyr)
# BUSCAR DIRET?RIO (PASTA COM OS ARQUIVOS)
setwd("C:/Users/Otavio/Documents/cursos/estatistica_R")
#ABRIR ARQUIVO
enem2019_tratado <- read.csv('enem2019_tratado.csv', sep = ",")
#M?DIA
mean(enem2019_tratado$NOTA_MT)
#MEDIANA
median(enem2019_tratado$NOTA_MT)
#MODA
#Criando uma fun??o
moda <- function(v) {
valor_unico <- unique(v) # Busca o valor unico para a coluna valor
valor_unico[which.max(tabulate(match(v, valor_unico)))] #tabular (contabilizar quantas vezes o valor ?nico aparece) e buscar o maior valor
}
#Obtendo a moda
resultado <- moda(enem2019_tratado$NOTA_MT)
print(resultado)
resultado <- moda(enem2019_tratado$NOTA_REDACAO)
print(resultado)
#HISTOGRAMA
#Analise matematica
hist(enem2019_tratado$NOTA_MT, probability=T, col="blue")
lines(density(enem2019_tratado$NOTA_MT) , col="red")
#Analise Redacao
hist(enem2019_tratado$NOTA_REDACAO, probability=T, col="blue")
lines(density(enem2019_tratado$NOTA_REDACAO) , col="red")
mean(enem2019_tratado$NOTA_REDACAO)
median(enem2019_tratado$NOTA_REDACAO)
resultado <- moda(enem2019_tratado$NOTA_REDACAO)
print(resultado)



###########################################
####   MEDIDAS DE DISPERSAO E POSICAO   ###
###########################################



#BAIXAR PACOTES, CASO ELES AINDA N?O ESTEJAM BAIXADOS
if(!require(dplyr)) install.packages("dplyr")
#CARREGAR PACOTES
library(dplyr)
# BUSCAR DIRET?RIO (PASTA COM OS ARQUIVOS)
setwd("C:/Users/Otavio/Documents/cursos/estatistica_R")
#ABRIR ARQUIVO
enem2019_tratado <- read.csv('enem2019_tratado.csv', sep = ",")
# MEDIDAS DE DISPERS?O
# VARIANCIA
variancia <- var(enem2019_tratado$NOTA_MT)
print(variancia)
# DESVIO PADRAO
desvio <- sd(enem2019_tratado$NOTA_MT)
desvio
# MEDIDAS DE POSI??O
quantile(enem2019_tratado$NOTA_MT)
IQR(enem2019_tratado$NOTA_MT) #diferen?a interquartil
quantile(enem2019_tratado$NOTA_MT, probs = c(0.05, 0.95))
quantile(enem2019_tratado$NOTA_MT, seq(from = 0, to = 1, by = 0.20)) #percentil de 0 a 1 com passo de 0.2
diff(range(enem2019_tratado$NOTA_MT)) #diferen?a do m?nimo ao m?ximo (Amplitude)
#TODAS AS PRINCIPAIS MEDIDAS JUNTAS
summary(enem2019_tratado$NOTA_MT) # resume tudi
summary(enem2019_tratado[c('NOTA_MT', 'NOTA_CN', 'NOTA_LC', 'NOTA_CH', 'NOTA_REDACAO')]) #indexa??o de colunas
#COMPARANDO UMA AMOSTRA COM A POPULA??O
amostra <- sample(c(0,1), 499951, replace = TRUE, prob=c(0.8,0.2))
summary(as.factor(amostra))
prop.table(table(amostra))
amostra_teste <- enem2019_tratado[amostra==1,]
dim(amostra_teste)
#M?DIA
mean(enem2019_tratado$NOTA_MT)
mean(amostra_teste$NOTA_MT)
#MEDIANA
median(enem2019_tratado$NOTA_MT)
median(amostra_teste$NOTA_MT)
#MODA
#Criando uma fun??o
moda <- function(v) {
valor_unico <- unique(v) # Busca o valor ?nico para a coluna valor
valor_unico[which.max(tabulate(match(v, valor_unico)))] #tabular (contabilizar quantas vezes o valor ?nico aparece) e buscar o maior valor
}
#MODA
moda(enem2019_tratado$NOTA_MT)
moda(amostra_teste$NOTA_MT)
# Geral
summary(enem2019_tratado$NOTA_MT)
summary(amostra_teste$NOTA_MT)



##############################
####     PROBABILIDADE     ###
##############################



# BAIXAR PACOTES, CASO ELES AINDA N?O ESTEJAM BAIXADOS
if(!require(dplyr)) install.packages("dplyr")
# CARREGAR PACOTES
library(dplyr)
# BUSCAR DIRET?RIO (PASTA COM OS ARQUIVOS)
setwd("C:/Users/Luciano/Desktop/Curso_estatistica_R")
# ABRIR ARQUIVO
enem2019_tratado <- read.csv('enem2019_tratado.csv', sep = ",")
enem_guarulhos <- enem2019_tratado %>% filter(NO_MUNICIPIO_RESIDENCIA=="Guarulhos")
nrow(enem_guarulhos)
enem_campinas <- enem2019_tratado %>% filter(NO_MUNICIPIO_RESIDENCIA=="Campinas")
nrow(enem_campinas)
# CRIANDO FUNCAO PROBABILIDADE
probab <- function(A, E) {
resultado = (A / E)*100
print(resultado, digits = 3)
}
# PROBABILIDADE DE RETIRAR UM VESTIBULANDO DE GUARULHOS
probab(nrow(enem_guarulhos), nrow(enem2019_tratado))
# PROBABILIDADE DE RETIRAR UM VESTIBULANDO DE GUARULHOS
probab(nrow(enem_campinas), nrow(enem2019_tratado))
# CRIANDO FUNCAO PROBABILIDADE DE NaO OCORRER UM EVENTO
probab_negativa <- function(A, E) {
resultado = (1 - (A / E))*100
print(resultado, digits = 3)
}
# PROBABILIDADE DE N?O RETIRAR UM VESTIBULANDO DE GUARULHOS E NEM DE CAMPINAS
probab_negativa((nrow(enem_guarulhos)+nrow(enem_campinas)), nrow(enem2019_tratado))
#CRIANDO FUNCAO PROBABILIDADE DA UNI?O MUTUAMENTE EXCLUSIVOS (AUB)
probab_uniao <- function(A, B, E) {
resultado = (A/E + B/E)*100
print(resultado, digits = 3)
}
#PROBABILIDADE DE RETIRAR UM VESTIBULANDO DE GUARULHOS OU DE CAMPINAS
probab_uniao(nrow(enem_guarulhos), nrow(enem_campinas), nrow(enem2019_tratado))
#CRIANDO FUNCAO PROBABILIDADE DA INTERSEC??O DE DOIS EVENTOS
probab_inter <- function(A, B, E) {
resultado = (A/E * B/E)*100
print(resultado, digits = 3)
}
#PROBABILIDADE DE RETIRAR UM VESTIBULANDO DE GUARULHOS E DE CAMPINAS (com reposi??o)
probab_inter(nrow(enem_guarulhos), nrow(enem_campinas), nrow(enem2019_tratado))
#CRIANDO FUNCAO PROBABILIDADE CONDICIONAL
probab_cond <- function(AB, B) {
resultado = (AB / B)*100
print(resultado, digits = 3)
}
#PROBABILIDADE DE RETIRAR UMA MULHER PARDA
mulher <- enem2019_tratado %>% filter(TP_SEXO=="F")
mulher_parda <- mulher %>% filter(TP_COR_RACA == 3)
probab_cond(nrow(mulher_parda), nrow(mulher))
